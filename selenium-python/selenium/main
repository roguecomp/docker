#!/usr/bin/env python3

# %%
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import requests
import redis
import json

# %%
total_steps = 5
current_step = 0

r = redis.Redis(host='redis', port=6379, db=1)

print("Step {}/{} : ".format(current_step + 1, total_steps))
current_step += 1
print(" ---> REDIS CONNECTED")

fireFoxOptions = webdriver.FirefoxOptions()
fireFoxOptions.set_headless()

driver = webdriver.Firefox(firefox_options=fireFoxOptions)

messenger_ids = json.load(open('.messenger_ids.json', 'r'))

url = 'https://www.facebook.com/messages/t/' + messenger_ids['mystery_man']

driver.get(url)

print("Step {}/{} : ".format(current_step + 1, total_steps))
current_step += 1
print(" ---> URL initialized")

# %%

email = driver.find_element_by_id('email')
password = driver.find_element_by_id('pass')
button = driver.find_element_by_id('loginbutton')
# %%

credentials = json.load(open('.credentials.json', 'r'))

print("Step {}/{} : ".format(current_step + 1, total_steps))
current_step += 1
print(" ---> READ CREDENTIALS FROM .credentials.json FILE")

email.send_keys(credentials['email'])
password.send_keys(credentials['password'])
button.click()

print("Step {}/{} : ".format(current_step + 1, total_steps))
current_step += 1
print(" ---> Logged into account")
# %%
time.sleep(3)

def send(driver, message: str = "testing") -> None:
    # Sending a message
    message_box = driver.switch_to.active_element
    message_box.send_keys(message)
    message_box.send_keys(Keys.RETURN)

def generate_reply(mes : str) -> str:
    req = requests.get('http://192.168.0.251:8080/chatbot/' + '_'.join(mes.split(' ')))
    req = req.json()

    return req['message']

    # %%
grid = driver.find_element_by_xpath('/html/body/div[1]/div/div[1]/div/div[3]/div/div/div[1]/div[1]/div[2]/div/div/div/div/div/div[1]/div[2]/div/div/div/div[1]/div[1]/div/div/div[3]/div')

messages = {}
text = ""

step = 0
latest_message = ""

replies = []
received = []

print("Step {}/{} : ".format(current_step + 1, total_steps))
current_step += 1
print(" ---> LISTENING")
while True:

    # time.sleep(1)

    incoming_groups = grid.find_elements_by_css_selector('div[data-testid="incoming_group"]')
    for group in incoming_groups:

        # # can potentially read Person A replied to Person B
        # sender = group.find_element_by_xpath('div[2]/div/div')
        # # get sender name
        # sender = sender.text
        # print("{}: ".format(sender))
        
        group = group.find_elements_by_css_selector('div[dir="auto"]')
        for message in group:
            latest_message = message.text
        
    # You can do something with the latest message here (stored in message.text)
    
    mes = latest_message    
    if mes not in messages:
        reply = generate_reply(mes)

        # Add reply and received message to lists
        replies.append(reply)
        received.append(mes)

        send(driver, reply)
        
        messages[mes] = reply

        # Send message and replies to redis database
        r.sadd('replies', **replies)
        r.sadd('received', **received)
    else:
        pass

# %%
driver.quit()
